---
import type { PluginPageTypeRendererProps } from 'studiocms/types';
import { importComponentsKeys } from 'studiocms/lib/renderer/runtime.js';
import { shared } from 'studiocms/lib/renderer/shared.js';
import { createComponentProxy, transformHTML } from '../../runtime/AstroComponentProxy.js';

function parse<T extends object>(data: string): T {
	return JSON.parse(data) as T;
}

// Import components
const _components = await importComponentsKeys();

// Create component proxy
// @ts-expect-error - $$result is a global variable injected by Astro during compilation and not a editor-known variable
const components = createComponentProxy($$result, _components);

// Define render function
const render = async (content: string): Promise<string> => {
	return await transformHTML(content, components, shared.studiocmsHTML?.sanitize);
};

interface Props extends PluginPageTypeRendererProps {}

// Get default content
const { defaultContent } = Astro.props.data;

const html = defaultContent?.content
	? parse<{ __STUDIOCMS_HTML: string }>(defaultContent.content).__STUDIOCMS_HTML
	: undefined;

// Get content to render
const contentToRender = html || '<h1>Error: No content found</h1>';

// Render content
const renderedContent = await render(contentToRender);
---
<Fragment set:html={renderedContent} />